# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build and Deploy
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci

  deploy-staging:
    name: Deploy sandbox
    needs: build
    environment: 'sandbox'
    runs-on: ubuntu-latest
    steps:
    - name: ssh to Digital Ocean droplet and clone repo
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
                    cd /home/daniel
                    mkdir -p sandbox
                    cd sandbox
                    git pull
                    touch test.txt
                    echo "Done!" >> test.txt
                    echo ${{ secrets.SSH_USERNAME }} >> test.txt
  deploy:
    name: Deploy production
    needs: build
    environment: 'production'
    runs-on: ubuntu-latest
    steps:
    - name: ssh to Digital Ocean droplet and clone repo
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
                    cd /home/daniel
                    mkdir -p production
                    cd production
                    git pull
                    touch test.txt
                    echo "Done!" >> test.txt
                    echo ${{ secrets.SSH_USERNAME }} >> test.txt
